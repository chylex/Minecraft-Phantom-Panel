@page "/login"
@using Phantom.Web.Identity.Interfaces
@using Phantom.Web.Identity.Authentication
@using System.ComponentModel.DataAnnotations
@attribute [AllowAnonymous]
@inject INavigation Navigation
@inject PhantomLoginManager LoginManager

<h1>Login</h1>

<Form Model="form" OnSubmit="DoLogin">
  <div style="max-width: 400px;">
    <div class="row">
      <div class="mb-3">
        <FormTextInput Id="account-username" Label="Username" @bind-Value="form.Username" />
      </div>
    </div>

    <div class="row">
      <div class="mb-3">
        <FormTextInput Id="account-password" Label="Password" Type="FormTextInputType.Password" @bind-Value="form.Password" />
      </div>
    </div>

    <FormButtonSubmit Label="Login" class="btn btn-primary" />
  </div>
  
  <FormSubmitError />
</Form>

@code {

  private readonly LoginFormModel form = new ();
  
  private sealed class LoginFormModel : FormModel {
    [Required]
    public string Username { get; set; } = string.Empty;

    [Required]
    public string Password { get; set; } = string.Empty;
  }

  protected override void OnInitialized() {
    if (Navigation.GetQueryParameter("token", out _)) {
      form.SubmitModel.StopSubmitting("Please login again.");
    }
  }

  private async Task DoLogin(EditContext context) {
    await form.SubmitModel.StartSubmitting();
    
    string? returnUrl = Navigation.GetQueryParameter("return", out var url) ? url : null;
    
    if (!await LoginManager.SignIn(form.Username, form.Password, returnUrl)) {
      form.SubmitModel.StopSubmitting("Invalid username or password.");
    }
  }

}
