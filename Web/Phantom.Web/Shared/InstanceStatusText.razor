@using Phantom.Common.Data.Instance
<nobr>
  @switch (Status) {
    case InstanceIsOffline:
      <span class="fw-semibold">Offline</span>
      break;

    case InstanceIsInvalid invalid:
      <span class="fw-semibold text-danger">Invalid <sup title="@invalid.Reason">[?]</sup></span>
      break;

    case InstanceIsNotRunning:
      <span class="fw-semibold">Not Running</span>
      break;

    case InstanceIsDownloading downloading:
      <ProgressBar Value="@downloading.Progress" Maximum="100">
        <span class="fw-semibold">Downloading Server</span> (@downloading.Progress%)
      </ProgressBar>
      break;

    case InstanceIsLaunching:
      <div class="spinner-border" role="status"></div>
      <span class="fw-semibold">&nbsp;Launching</span>
      break;

    case InstanceIsRunning:
      <span class="fw-semibold text-success">Running</span>
      break;

    case InstanceIsBackingUp:
      <div class="spinner-border" role="status"></div>
      <span class="fw-semibold">&nbsp;Backing Up</span>
      break;

    case InstanceIsRestarting:
      <div class="spinner-border" role="status"></div>
      <span class="fw-semibold">&nbsp;Restarting</span>
      break;

    case InstanceIsStopping:
      <div class="spinner-border" role="status"></div>
      <span class="fw-semibold">&nbsp;Stopping</span>
      break;

    case InstanceIsFailed failed:
      <span class="fw-semibold text-danger">Failed <sup title="@failed.Reason.ToSentence()">[?]</sup></span>
      break;

    default:
      <span class="fw-semibold">Unknown</span>
      break;
  }
</nobr>

@code {

  [Parameter]
  public IInstanceStatus? Status { get; set; }

}
